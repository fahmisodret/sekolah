<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;
use DummyRootNamespaceHttp\Requests\Admin\{{crudName}}\{{modelName}}CreateRequest;
use DummyRootNamespaceHttp\Requests\Admin\{{crudName}}\{{modelName}}UpdateRequest;

class DummyClass extends Controller
{
    public function index(Request $request)
    {
        $keyword = $request->get('search');
        $perPage = {{pagination}};

        if (!empty($keyword)) {
            ${{crudName}} = {{modelName}}::{{whereSnippet}}latest()->paginate($perPage);
        } else {
            ${{crudName}} = {{modelName}}::latest()->paginate($perPage);
        }

        return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
    }

    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    public function store({{modelName}}CreateRequest $request)
    {
        {{modelName}}::create($request->getValidRequest());

        return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} added!');
    }

    public function show($id)
    {
        $data['{{crudNameSingular}}'] = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.show', $data);
    }

    public function edit($id)
    {
        $data['{{crudNameSingular}}'] = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.edit', $data);
    }

    public function update({{modelName}}UpdateRequest $request, $id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        if($request->hasFile('image')){
            Storage::delete('path to folder'.${{crudNameSingular}}->image);
        }
        ${{crudNameSingular}}->update($request->getValidRequest());

        return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} updated!');
    }

    public function destroy($id)
    {
        // $data = {{modelName}}::find($id);
        // Storage::delete('path to folder'.$data->image);
        {{modelName}}::destroy($id);

        return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} deleted!');
    }
}
